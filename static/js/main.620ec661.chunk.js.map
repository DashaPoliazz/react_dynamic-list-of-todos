{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","filter","searchQuery","onFilter","onSearchQuery","onAppliedSearchQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onDeletedSelectedTodo","useState","selectedUser","setSelectedUser","useEffect","userId","user","href","email","name","App","setTodos","setSelectedTodo","setFilter","setSearchQuery","debouncedSearchQuery","setDebouncedSearchQuery","todosFromServer","applySearchQuery","useCallback","debounce","filterTodos","todoList","inputQuery","length","isTitle","toLowerCase","includes","getFilteredTodos","useMemo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.620ec661.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectedTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={\n            selectedTodo?.id === todo.id ? 'has-background-info-light' : ''\n          }\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={\n                todo.completed ? 'has-text-success' : 'has-text-danger'\n              }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                {selectedTodo?.id === todo.id ? (\n                  <i className=\"far fa-eye-slash\" />\n                ) : (\n                  <i className=\"far fa-eye\" />\n                )}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","interface Props {\n  filter: string;\n  searchQuery: string;\n  onFilter: (filter: string) => void;\n  onSearchQuery: (searchQuery: string) => void;\n  onAppliedSearchQuery: (appliedSearchQuery: string) => void;\n}\n\nexport const TodoFilter = ({\n  filter,\n  searchQuery,\n  onFilter,\n  onSearchQuery,\n  onAppliedSearchQuery,\n}: Props) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => onFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={({ target }) => {\n            onSearchQuery(target.value);\n            onAppliedSearchQuery(target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onSearchQuery('');\n                onAppliedSearchQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\r\nimport { User } from './types/User';\r\n\r\n// eslint-disable-next-line max-len\r\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\r\n\r\nfunction wait(delay: number): Promise<void> {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nfunction get<T>(url: string): Promise<T> {\r\n  // eslint-disable-next-line prefer-template\r\n  const fullURL = BASE_URL + url + '.json';\r\n\r\n  return wait(1000)\r\n    .then(() => fetch(fullURL))\r\n    .then(res => res.json());\r\n}\r\n\r\nexport const getTodos = () => get<Todo[]>('/todos');\r\n\r\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\r\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nexport const Loader: React.FC = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo;\n  onDeletedSelectedTodo: (todo: null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onDeletedSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then((user) => setSelectedUser(user));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onDeletedSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>{selectedUser.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect, useState, useCallback, useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { debounce } from 'lodash';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [debouncedSearchQuery, setDebouncedSearchQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then((todosFromServer) => setTodos(todosFromServer));\n  }, []);\n\n  const applySearchQuery = useCallback(debounce(setDebouncedSearchQuery, 1000), [\n    debouncedSearchQuery,\n  ]);\n\n  const filterTodos = useCallback(\n    (todoList: Todo[], inputQuery: string) => {\n      if (!todoList.length) {\n        return null;\n      }\n\n      const filteredTodos = todoList.filter((todo) => {\n        const { title, completed } = todo;\n\n        const isTitle = title\n          .toLowerCase()\n          .includes(inputQuery.toLowerCase());\n\n        switch (filter) {\n          case 'all':\n            return isTitle;\n          case 'active':\n            return !completed && isTitle;\n          case 'completed':\n            return completed && isTitle;\n          default:\n            return todo;\n        }\n      });\n\n      return filteredTodos;\n    },\n    [debouncedSearchQuery, filter],\n  );\n\n  const getFilteredTodos = useMemo(\n    () => filterTodos(todos, debouncedSearchQuery),\n    [todos, debouncedSearchQuery, filter],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                searchQuery={searchQuery}\n                onFilter={setFilter}\n                onSearchQuery={setSearchQuery}\n                onAppliedSearchQuery={applySearchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && <Loader />}\n              {getFilteredTodos && (\n                <TodoList\n                  todos={getFilteredTodos}\n                  selectedTodo={selectedTodo}\n                  onSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onDeletedSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}